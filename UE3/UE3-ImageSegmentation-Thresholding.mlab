// MDL v1 utf8
mevislabVersion = 3.4.2
network  {
  watchlist = ""
}
module LoadAny {
  internal  {
    frame = "469 269 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "369 208 701 538"
        sizeHint = "701 538"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = LoadAny
    name = $(HOME)/PycharmProjects/mdgamls/UE3/Exercise/Dataset_UE3_part3/aneurysm.vti
    verbose = FALSE
    analyzeHeader = TRUE
    allowBioFormats = FALSE
  }
}
module View2D {
  internal  {
    frame = "469 37 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "705 182 400 400"
        sizeHint = "400 400"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = View2D
    inventorInputOn = TRUE
    inventorOutputOn = FALSE
    view2DExtensionsOn = TRUE
    startSlice = 55
    numSlices = 1
    numXSlices = 1
    sliceStep = 1
    slab = 1
    blendMode = BLEND_REPLACE
    timePoint = 0
    maxTimePoint = 0
    filterMode = FILTER_LINEAR
    standardKeys = TRUE
    cineMode = CINE_ZT
    cineDirection = CINE_FORWARD
    cineRepeat = CINE_ONCE
    cineSpeed = 0.1
    cineAlwaysReset = TRUE
    snapToCenter = TRUE
    zoomMode = VIEW2D_AUTO_ZOOM
    unzoomOnImageChange = FALSE
    sliceZoom = 1
    sliceZoomSynced = 1
    baseColor = "1 1 1"
    margin = "2 2"
    sliceOrigin = "0 0"
    useShaders = TRUE
    useManagedInteraction = FALSE
    lutCenter = 250
    lutWidth = 2548
    annotationOn = TRUE
    annotationMode = ANNO_MODE_AUTO
    annotationSizeMode = ANNO_SHOW_DETAILED
    annotationCol = "0.899999976158142 0.899999976158142 0.899999976158142"
    annotationFontSize = ANNO_SIZE_AUTO
    annoCoords = Voxel
    annoCTValue = AsIs
    borderOn = FALSE
    borderColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    valueHighPrecision = TRUE
    showColorChannelValues = FALSE
    colorChannelSeparator = " / "
    maxPrecision = 4
    enableSlicing = TRUE
    useRelativeLUTIfNoInputImage = TRUE
  }
}
module Threshold {
  internal  {
    frame = "285 189 88 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "978 481 300 298"
        sizeHint = "262 298"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = Threshold
    threshold = 160
    relativeThreshold = FALSE
    comparisonOperator = Greater
    conditionTrueWriteValue = UserDef
    userConditionTrueValue = 1
    conditionFalseWriteValue = UserDef
    userConditionFalseValue = 0
  }
}
module SoView2DOverlay {
  internal  {
    frame = "225 85 160 56"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "490 251 458 453"
        sizeHint = "458 453"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = SoView2DOverlay
    interactionProviderID = ""
    drawingOn = TRUE
    editingOn = TRUE
    fixZOn = TRUE
    color = "1 1 1"
    selectionTolerance = 4
    needsValidVoxel = TRUE
    button1 = IGNORED
    button2 = IGNORED
    button3 = IGNORED
    shift = IGNORED
    control = IGNORED
    alt = IGNORED
    wantsAllEvents = TRUE
    wantsKeyEvents = TRUE
    wantsMouseWheelEvents = FALSE
    setEventHandled = FALSE
    ignoreHandledEvents = FALSE
    createNewMode = FALSE
    renderOnSlab = TRUE
    clipToSlice = TRUE
    cursorShape = UNDEFINED_CURSOR
    overlayName = ""
    cacheTextures = TRUE
    blendMode = BLEND_BLEND
    overwriteCurrentTimePoint = FALSE
    timePoint = 0
    maxTimePoint = 0
    filterMode = FILTER_LINEAR
    inheritFilterMode = TRUE
    lutPrecision = VIEW2D_LUT_AUTO
    alphaFactor = 1
    baseColor = "1 0 1"
    useWorldCoords = TRUE
    applyLut = TRUE
    isCheckerTiling = FALSE
    checkerTileSize = 2
    areCheckerTilesInverted = FALSE
  }
}
connections  {
  View2D.inImage = LoadAny.outImage
  View2D.inInvPreLUT = SoView2DOverlay.self
  Threshold.input0 = LoadAny.outImage
  SoView2DOverlay.image = Threshold.output0
}
networkModel = ""
